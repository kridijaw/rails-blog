require: rubocop-rails

Lint/UnusedBlockArgument:
  Description: Checks for unused block arguments.
  StyleGuide: "#underscore-unused-vars"
  Enabled: false
  IgnoreEmptyBlocks: true
  AllowUnusedKeywordArguments: false

Lint/UnusedMethodArgument:
  Description: Checks for unused method arguments.
  StyleGuide: "#underscore-unused-vars"
  Enabled: false
  AllowUnusedKeywordArguments: false
  IgnoreEmptyMethods: true
  IgnoreNotImplementedMethods: true

Metrics/MethodLength:
  Description: >-
    Normally methods should have less than 10-20 lines of code. But this one has
    more than 20.
  StyleGuide: "https://github.com/bbatsov/ruby-style-guide#short-methods"
  Enabled: true
  CountComments: false
  Max: 35

Metrics/ClassLength:
  Description: Avoid classes longer than 100 lines of code.
  Enabled: true
  CountComments: false
  Max: 100
  CountAsOne: []

Metrics/CyclomaticComplexity:
  Description: >-
    A complexity metric that is strongly correlated to the number of test cases
    needed to validate a method.
  Enabled: false
  AllowedMethods: []
  AllowedPatterns: []
  Max: 7

Metrics/PerceivedComplexity:
  Description: >-
    A complexity metric geared towards measuring complexity for a
    human reader.
  Enabled: true
  VersionAdded: "0.25"
  VersionChanged: "0.81"
  AllowedMethods: []
  AllowedPatterns: []
  Max: 8

Metrics/AbcSize:
  Description: >-
    A calculated magnitude based on number of assignments,
    branches, and conditions.
  Reference:
    - http://c2.com/cgi/wiki?AbcMetric
    - https://en.wikipedia.org/wiki/ABC_Software_Metric
  Enabled: true
  VersionAdded: "0.27"
  VersionChanged: "1.5"
  # The ABC size is a calculated magnitude, so this number can be an Integer or
  # a Float.
  AllowedMethods: []
  AllowedPatterns: []
  CountRepeatedAttributes: true
  Max: 17

Metrics/BlockLength:
  Description: "Avoid long blocks with many lines."
  Enabled: true
  VersionAdded: "0.44"
  VersionChanged: "1.5"
  CountComments: false # count full line comments?
  Max: 35
  CountAsOne: []
  AllowedMethods:
    # By default, exclude the `#refine` method, as it tends to have larger
    # associated blocks.
    - refine
  AllowedPatterns: []
  Exclude:
    - "**/*.gemspec"

Style/FrozenStringLiteralComment:
  Description: >-
    Add the frozen_string_literal comment to the top of files
    to help transition to frozen string literals by default.
  Enabled: false
  VersionAdded: "0.36"
  VersionChanged: "0.79"
  EnforcedStyle: always
  SupportedStyles:
    # `always` will always add the frozen string literal comment to a file
    # regardless of the Ruby version or if `freeze` or `<<` are called on a
    # string literal. It is possible that this will create errors.
    - always
    # `always_true` will add the frozen string literal comment to a file,
    # similarly to the `always` style, but will also change any disabled
    # comments (e.g. `# frozen_string_literal: false`) to be enabled.
    - always_true
    # `never` will enforce that the frozen string literal comment does not
    # exist in a file.
    - never
  SafeAutoCorrect: false
